---
# yaml-language-server: $schema=../docs-resources/schemas/defs-schema.json

$schema: "../docs-resources/schemas/defs-schema.json#"

# Used to create normative rules for sstc.adoc file.
# Tags refer to anchors in any adoc file for any ISA manual.

normative_curations:
  - name: stimecmp-stimecmph_sz_acc
    summary: stimecmp is a 64-bit CSR with 64-bit precision; RV32 accesses split into stimecmp and stimecmph
    tags: ["norm:stimecmp-stimecmph_sz_acc_"]

  - name: stimecmp_stimecmph_num
    summary: CSR numbers for stimecmp and stimecmph are 0x14D and 0x15D
    tags: ["norm:stimecmp_stimecmph_num"]

  - name: mip_sip-stip_op
    summary: Supervisor timer interrupt becomes pending in mip/sip STIP when time >= stimecmp
    tags: ["norm:mip_sip-stip_op"]

  - name: mip-stip_mie-stie_op
    summary: mip.STIP and mie.STIE are interrupt-pending and interrupt-enable bits for supervisor timer interrupts
    tags: ["norm:mip-stip_mie-stie_op"]

  - name: mip-stip_writable
    summary: If stimecmp not implemented, mip.STIP is writable by M-mode to deliver interrupts to S-mode
    tags: ["norm:mip-stip_writable"]

  - name: mip-stip_ro
    summary: If stimecmp is implemented, mip.STIP is read-only and reflects supervisor timer interrupt
    tags: ["norm:mip-stip_ro"]

  - name: sip-stip_clear
    summary: Supervisor timer interrupt cleared by writing stimecmp greater than current time
    tags: ["norm:sip-stip_clear"]

  - name: sip-stip_sie-stie_clear
    summary: sip.STIP and sie.STIE are interrupt-pending and interrupt-enable bits for supervisor timer interrupts
    tags: ["norm:sip-stip_sie-stie_clear"]

  - name: sip-stip_ro
    summary: If implemented, sip.STIP is read-only
    tags: ["norm:sip-stip_ro"]

  - name: sip-stip_env
    summary: sip.STIP set and cleared by execution environment if stimecmp not implemented, or by stimecmp if implemented
    tags: ["norm:sip-stip_env"]

  - name: sip-stip_stimecmp
    summary: sip.STIP reflects interrupts from stimecmp; set and cleared by writing stimecmp relative to time
    tags: ["norm:sip-stip_stimecmp"]

  - name: mcounteren-tm_stimecmp_op
    summary: When mcounteren.TM=0, stimecmp and vstimecmp accesses in less-privileged modes cause illegal-instruction exception
    tags: ["norm:mcounteren-tm_stimecmp_op"]

  - name: mcounteren-tm_stimecmp_acc
    summary: When mcounteren.TM=1, S-mode and VS-mode may access stimecmp/vstimecmp if implemented
    tags: ["norm:mcounteren-tm_stimecmp_acc"]

  - name: vstimecmp_sz
    summary: vstimecmp is a 64-bit CSR with 64-bit precision
    tags: ["norm:vstimecmp_sz"]

  - name: vstimecmp_acc
    summary: In RV32, vstimecmp low bits accessed via vstimecmp, high bits via vstimecmph
    tags: ["norm:vstimecmp_acc"]

  - name: vstimecmp_num
    summary: CSR numbers for vstimecmp/vstimecmph are 0x24D and 0x25D
    tags: ["norm:vstimecmp_num"]

  - name: hip-vstip_op
    summary: VS timer interrupt pending in hip.VSTIP when (time+htimedelta) >= vstimecmp
    tags: ["norm:hip-vstip_op"]

  - name: hip-vstip_clear
    summary: hip.VSTIP cleared when vstimecmp > (time+htimedelta)
    tags: ["norm:hip-vstip_clear"]

  - name: hip-vstip_enable
    summary: VS timer interrupt taken based on enable/delegation rules while V=1
    tags: ["norm:hip-vstip_enable"]

  - name: hip-vstip_hie-vstie_def
    summary: hip.VSTIP and hie.VSTIE are interrupt-pending and enable bits for VS-level timer interrupts
    tags: ["norm:hip-vstip_hie-vstie_def"]

  - name: hip-vstip_ro
    summary: hip.VSTIP is read-only
    tags: ["norm:hip-vstip_ro"]

  - name: hip-vstip_src
    summary: hip.VSTIP is logical-OR of hvip.VSTIP and vstimecmp timer signal
    tags: ["norm:hip-vstip_src"]

  - name: hip-vstip_setclear
    summary: hip.VSTIP set/cleared by vstimecmp relative to (time+htimedelta)
    tags: ["norm:hip-vstip_setclear"]

  - name: hip-vstip_valid
    summary: hip.VSTIP defined while V=0 as well as V=1
    tags: ["norm:hip-vstip_valid"]

  - name: hcounteren-tm_vstimecmp_op
    summary: When hcounteren.TM=0, VS-mode access to vstimecmp causes virtual-instruction exception if mcounteren.TM=1
    tags: ["norm:hcounteren-tm_vstimecmp_op"]

  - name: hcounteren-tm_vstimecmp_acc
    summary: When hcounteren.TM=1 and mcounteren.TM=1, VS-mode access to vstimecmp is permitted
    tags: ["norm:hcounteren-tm_vstimecmp_acc"]

  - name: menvcfg-stce_op
    summary: menvcfg.STCE enables stimecmp for S-mode, henvcfg.STCE enables vstimecmp for VS-mode
    tags: ["norm:menvcfg-stce_op"]

  - name: menvcfg-stce_warl
    summary: STCE bits are WARL and hard-wired to 0 when extension not implemented
    tags: ["norm:menvcfg-stce_warl"]

  - name: menvcfg-stce0_op
    summary: When menvcfg.STCE=0, non-M access to stimecmp/vstimecmp causes exception; henvcfg.STCE=0 and STIP reverts
    tags: ["norm:menvcfg-stce0_op"]

  - name: menvcfg-stce_mixed
    summary: When menvcfg.STCE=1 and henvcfg.STCE=0, VS-mode access to vstimecmp causes virtual-instruction exception
    tags: ["norm:menvcfg-stce_mixed"]
